/* Looks */
body {
  background: linear-gradient(skyblue, white 450px, yellowgreen 0);
  height: 100vh;

  display: flex;
  justify-content: space-around;
}

.ball {
  width: 0; 
  height: 0; 
  padding: 1.5em;
  border-radius: 50%;
  background: red radial-gradient(at 30% 30%, #fdd, red);
}
/* Animations */
/* This is simpler version using predefined timing functions in CSS
 * and cubic-bezier (inverted ease) */
@keyframes simple {
  60%, 80%, to {
    transform: translatey(400px);
    animation-timing-function: ease;
  }

  70% { 
    transform: translatey(300px);
  }

  90% { 
    transform: translatey(360px); 
  }
}

/* This version uses animate.css library cubic-bezier values */
@keyframes advanced {
  60%, 80%, to {
    transform: translatey(400px);
    animation-timing-function: cubic-bezier(.215, .61, .355, .1);
  }

  70% { 
    transform: translatey(300px);
  }

  90% { 
    transform: translatey(360px); 
  }
}

/* As above, just inverted for comparison reasons */
@keyframes inverted {
  60%, 80%, to {
    transform: translatey(400px);
    animation-timing-function: cubic-bezier(.755, .05, .855, .06);
  }

  70% { 
    transform: translatey(300px);
  }

  90% { 
    transform: translatey(360px); 
  }
}

.simple {
  animation: simple 2s cubic-bezier(.1, .25, 1, .25) forwards;
}

.advanced {
  animation: advanced 2s cubic-bezier(.755, .05, .855, .06) forwards;
}

.inverted {
  animation: inverted 2s cubic-bezier(.215, .61, .355, .1) forwards;
}
